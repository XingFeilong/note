当项目复杂度和用户数提高的时候,我们常见的问题
1.卡 2.挂 3.数据备份 4.数据分析 5.安全 6.24小时在线 7.多平台 8.多端 9.跨地域 10.实时性强



总结:
1.性能问题  2.交互问题 3.安全问题 4.可持续发展与维护


常用词汇:  进程  线程   CPU   内存    网络  IO    异步  缓存   并发   负载  访问数  用户数  
进程:进程指的是我们计算机操作系统中运行的一个应用程序
进程创建的过程中,操作系统会为进程分配CPU时间片,并分配相应的内存.


性能计算:    
什么是CPU指令
类似  1+2 ;  $a=3;   $a<$b  都是CPU指令   大致可分为    计算指令  控制指令  寻址   ....
CPU 主频  1G  =1000M    1M=1000k   1k=1000次
2^10=2*2*2*2*2....  因此 2^10占用多条指令

内存:申明一个变量如 $a  在标准的32位操作系统中占用4个字节
内存类似若干连续排布的格子  [|||||||][|||||||][|||||||][|||||||][|||||||][][][][][][][][][][][][][][]  
32位/64位,  位宽指的是我们的计算机cpu地址总线宽度 
如8位计算机指  我们有8位的地址总线用于内存寻址     [0][0][0][0][0][1][1][1]
32bit   /  00000....000   1111....1111   2^32  1024*1024*1024*2^2=4*1G=4G
$a=4;
$a="ascdas";




不同语言开发解决性能问题的思想   
PHP -> 多进程
php通常是和apache一起工作,将php作为apache的一个模块扩展来使用,或则采用FASTCGI方式通过FPM与web容器通信
我们的每一个用户请求都将使用一个进程来处理用户请求.

JAVA ->  多线程
单个进程中同时有多个函数在运行，我们就认为这个应用是多线程的。


node JS ->  单进程单线程   
nginx 与nodejs jetty提升效率的方法相同
异步&非阻塞  
apache接收到一个用户请求-〉 创建php进程处理请求-〉 php通过Http协议解析获取用户提交数据-〉进行数据过滤与加工-〉（接收用户上传的文件）-〉（对图片缩放/给图片加水印）-〉将数据插入数据库-〉等待数据处理完成-〉加载模板-〉输出页面-〉结束进程-〉回收资源

    

