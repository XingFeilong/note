tb_user_0 ...tb_user_1 ...tb_user_2
当多张表具有完全相同的数据结构时 ,我们认为这些表示对一个实体数据的横向切分.
每张表可以有自己的id
但是所有切分出来的表必须具备全局uid
分表后要按照某个要素（通常是全局id）进行某种算法的计算，得到表后缀
将全局id（如uid）进行一次md5将得到一个由16进制数值组成的32位字符串
---------------------------------------------------------------------------------------------------------------
如果只是做简单切分的时候,我们会遇到问题
1.当我们需要将这些数据进行统计与分析的时候
2.当我要查询某条数据时,我必须要知道我要查的数据在哪一张表里,否则我就需要查询所有的表来查找结果
3.当我要插入数据的时候,我必须尽可能的让每张表的负载均匀
4.当我要修改数据的时候,我必须明确我要修改的数据存在哪里



在不同时期分表,会产生不同的问题
1.项目启动阶段就进行分表
2.项目启动阶段没有分表,而是在项目积累了一定的数据量以后再进行分表
3.项目之前就进行过分表,但是被切分后的表经过长时间运行,又产生了大量数据,需要再次分表


---------------------------------------------------------------------------------------------------------------
合理的分表不单单能解决单张表数据量过大的问题，还能优化我们的业务逻辑
tb_product_store_sh   tb_product_store_bj  tb_product_store_hubei  
基于区域位置的分表 非常适合做类似库存，商户信息，工商管理等有着明显区域性的数据的分表


基于IP地址分表
用于统计与分析数据   访问日志


按时间分表
日志   
财务报表   绩效考核   。。。。。。
tb_gzff_2005  tb_gzff_2006     工资流水   出纳凭证记录等适合按年份分表
个人考勤记录  个人销售记录（签单记录） 按月份分表
季度，半年度  部门业绩  公司资产   等


进入新的财年后将去年的数据倒入到备份库（通常备份库里面里面保存3年的数据），备份库中超过3年的数据，作为数据文件打包存储并刻盘。

人群



